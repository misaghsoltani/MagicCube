[mypy]
python_version = 3.10
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True
no_implicit_optional = True
strict_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True

# Flip on mypy's “strict mode” bundle (~15 individual safety flags).
strict = True

# Also forbid ==/!= between unrelated types (helps catch bytes/str mix-ups).
strict_equality = True

# Adopt the --local-partial-types rule that will be ON by default in mypy 2.0.
local_partial_types = True

# Noise-reduction & bug-surfacing helpers
# Warn if a  # type: ignore  winds up useless (often a copy-paste error).
warn_unused_ignores = True
# Flag dead code produced by if False, return-before-raise, etc.
warn_unreachable = True
# Complain when a function's return type falls back to  Any.
warn_return_any = True
# Tell you when you mistype a key in this very file.
warn_unused_configs = True

# Output ergonomics
# Pretty, colourised, code-snippet-rich error messages.
pretty = True
color_output = True
show_error_context = True  # include surrounding source excerpt
show_error_codes = True    # e.g. [attr-defined], [call-arg]
show_column_numbers = True # point to exact char, not just line

# Performance
incremental = True      # reuse prior check results
sqlite_cache = True     # store that cache in a single .sqlite DB
cache_dir = .mypy_cache

# Error-code fine-tuning
enable_error_code = truthy-bool, ignore-without-code, unused-awaitable
disable_error_code = override                                          # suppress noisy “method override” fp's

# Project layout
files = src     # only look under ./src
exclude = (?x)( # verbosely ignore generated artefacts
^build/
| ^dist/
| ^\.venv/
| ^docs/
)

# Plugins
plugins = (
attrs,         # built-in: full support for @define/@frozen
pydantic.mypy, # pydantic v2 models become fully-typed
)
